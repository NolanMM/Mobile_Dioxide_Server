// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mobile_Server_Dioxide.Context;

#nullable disable

namespace Mobile_Server_Dioxide.Migrations
{
    [DbContext(typeof(DioxieReadDbContext))]
    partial class DioxieReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mobile_Server_Dioxide.Entities.Company_Information_Silver", b =>
                {
                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("beta")
                        .HasColumnType("float");

                    b.Property<string>("ceo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("changes")
                        .HasColumnType("float");

                    b.Property<int?>("cik")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cusip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("dcf")
                        .HasColumnType("float");

                    b.Property<double?>("dcfDiff")
                        .HasColumnType("float");

                    b.Property<bool?>("defaultImage")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchangeShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fullTimeEmployees")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ipoDate")
                        .HasColumnType("date");

                    b.Property<bool?>("isActivelyTrading")
                        .HasColumnType("bit");

                    b.Property<bool?>("isAdr")
                        .HasColumnType("bit");

                    b.Property<bool?>("isEtf")
                        .HasColumnType("bit");

                    b.Property<bool?>("isFund")
                        .HasColumnType("bit");

                    b.Property<string>("isin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("lastDiv")
                        .HasColumnType("float");

                    b.Property<long?>("mktCap")
                        .HasColumnType("bigint");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<string>("range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("volAvg")
                        .HasColumnType("int");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Company_Information", "Silver");

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Mobile_Server_Dioxide.Entities.Historical_Prices_Stock_Bronze", b =>
                {
                    b.Property<double?>("Close")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("Date");

                    b.Property<double?>("Dividends")
                        .HasColumnType("float");

                    b.Property<double?>("Stock_Splits")
                        .HasColumnType("float");

                    b.Property<string>("Stock_Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.ToTable("Historical_Prices", "Bronze");

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Mobile_Server_Dioxide.Entities.Historical_Prices_Stock_with_TA_Company_Information_Gold", b =>
                {
                    b.Property<double?>("Close")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<double?>("Dividends")
                        .HasColumnType("float");

                    b.Property<double?>("High")
                        .HasColumnType("float");

                    b.Property<double?>("Low")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_10")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_11")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_12")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_13")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_14")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_15")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_16")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_17")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_18")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_19")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_2")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_20")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_21")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_22")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_23")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_24")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_25")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_26")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_27")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_28")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_29")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_3")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_4")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_5")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_6")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_7")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_8")
                        .HasColumnType("float");

                    b.Property<double?>("MARD_9")
                        .HasColumnType("float");

                    b.Property<double?>("Open")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_10")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_11")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_12")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_13")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_14")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_15")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_16")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_17")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_18")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_19")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_2")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_20")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_21")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_22")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_23")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_24")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_25")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_26")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_27")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_28")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_29")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_3")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_4")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_5")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_6")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_7")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_8")
                        .HasColumnType("float");

                    b.Property<double?>("RSI_9")
                        .HasColumnType("float");

                    b.Property<double?>("Stock_Splits")
                        .HasColumnType("float");

                    b.Property<string>("Stock_Symbol")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("beta")
                        .HasColumnType("float");

                    b.Property<string>("ceo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("changes")
                        .HasColumnType("float");

                    b.Property<int?>("cik")
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cusip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("dcf")
                        .HasColumnType("float");

                    b.Property<double?>("dcfDiff")
                        .HasColumnType("float");

                    b.Property<bool?>("defaultImage")
                        .HasColumnType("bit");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("exchangeShortName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("fullTimeEmployees")
                        .HasColumnType("int");

                    b.Property<double?>("gain_10")
                        .HasColumnType("float");

                    b.Property<double?>("gain_11")
                        .HasColumnType("float");

                    b.Property<double?>("gain_12")
                        .HasColumnType("float");

                    b.Property<double?>("gain_13")
                        .HasColumnType("float");

                    b.Property<double?>("gain_14")
                        .HasColumnType("float");

                    b.Property<double?>("gain_15")
                        .HasColumnType("float");

                    b.Property<double?>("gain_16")
                        .HasColumnType("float");

                    b.Property<double?>("gain_17")
                        .HasColumnType("float");

                    b.Property<double?>("gain_18")
                        .HasColumnType("float");

                    b.Property<double?>("gain_19")
                        .HasColumnType("float");

                    b.Property<double?>("gain_2")
                        .HasColumnType("float");

                    b.Property<double?>("gain_20")
                        .HasColumnType("float");

                    b.Property<double?>("gain_21")
                        .HasColumnType("float");

                    b.Property<double?>("gain_22")
                        .HasColumnType("float");

                    b.Property<double?>("gain_23")
                        .HasColumnType("float");

                    b.Property<double?>("gain_24")
                        .HasColumnType("float");

                    b.Property<double?>("gain_25")
                        .HasColumnType("float");

                    b.Property<double?>("gain_26")
                        .HasColumnType("float");

                    b.Property<double?>("gain_27")
                        .HasColumnType("float");

                    b.Property<double?>("gain_28")
                        .HasColumnType("float");

                    b.Property<double?>("gain_29")
                        .HasColumnType("float");

                    b.Property<double?>("gain_3")
                        .HasColumnType("float");

                    b.Property<double?>("gain_4")
                        .HasColumnType("float");

                    b.Property<double?>("gain_5")
                        .HasColumnType("float");

                    b.Property<double?>("gain_6")
                        .HasColumnType("float");

                    b.Property<double?>("gain_7")
                        .HasColumnType("float");

                    b.Property<double?>("gain_8")
                        .HasColumnType("float");

                    b.Property<double?>("gain_9")
                        .HasColumnType("float");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("industry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ipoDate")
                        .HasColumnType("date");

                    b.Property<bool?>("isActivelyTrading")
                        .HasColumnType("bit");

                    b.Property<bool?>("isAdr")
                        .HasColumnType("bit");

                    b.Property<bool?>("isEtf")
                        .HasColumnType("bit");

                    b.Property<bool?>("isFund")
                        .HasColumnType("bit");

                    b.Property<string>("isin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("lastDiv")
                        .HasColumnType("float");

                    b.Property<double?>("loss_10")
                        .HasColumnType("float");

                    b.Property<double?>("loss_11")
                        .HasColumnType("float");

                    b.Property<double?>("loss_12")
                        .HasColumnType("float");

                    b.Property<double?>("loss_13")
                        .HasColumnType("float");

                    b.Property<double?>("loss_14")
                        .HasColumnType("float");

                    b.Property<double?>("loss_15")
                        .HasColumnType("float");

                    b.Property<double?>("loss_16")
                        .HasColumnType("float");

                    b.Property<double?>("loss_17")
                        .HasColumnType("float");

                    b.Property<double?>("loss_18")
                        .HasColumnType("float");

                    b.Property<double?>("loss_19")
                        .HasColumnType("float");

                    b.Property<double?>("loss_2")
                        .HasColumnType("float");

                    b.Property<double?>("loss_20")
                        .HasColumnType("float");

                    b.Property<double?>("loss_21")
                        .HasColumnType("float");

                    b.Property<double?>("loss_22")
                        .HasColumnType("float");

                    b.Property<double?>("loss_23")
                        .HasColumnType("float");

                    b.Property<double?>("loss_24")
                        .HasColumnType("float");

                    b.Property<double?>("loss_25")
                        .HasColumnType("float");

                    b.Property<double?>("loss_26")
                        .HasColumnType("float");

                    b.Property<double?>("loss_27")
                        .HasColumnType("float");

                    b.Property<double?>("loss_28")
                        .HasColumnType("float");

                    b.Property<double?>("loss_29")
                        .HasColumnType("float");

                    b.Property<double?>("loss_3")
                        .HasColumnType("float");

                    b.Property<double?>("loss_4")
                        .HasColumnType("float");

                    b.Property<double?>("loss_5")
                        .HasColumnType("float");

                    b.Property<double?>("loss_6")
                        .HasColumnType("float");

                    b.Property<double?>("loss_7")
                        .HasColumnType("float");

                    b.Property<double?>("loss_8")
                        .HasColumnType("float");

                    b.Property<double?>("loss_9")
                        .HasColumnType("float");

                    b.Property<long?>("mktCap")
                        .HasColumnType("bigint");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("price")
                        .HasColumnType("float");

                    b.Property<string>("range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("updated_Date")
                        .HasColumnType("date");

                    b.Property<int?>("volAvg")
                        .HasColumnType("int");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zip")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Historical_Prices_Stock_with_TA_Company_Information", "Gold");

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Mobile_Server_Dioxide.Entities.Historical_Stock_News_Sentiment_Score_Gold", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("category")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("datetime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("headline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.Property<double?>("negative_value")
                        .HasColumnType("float");

                    b.Property<double?>("neutral_value")
                        .HasColumnType("float");

                    b.Property<double?>("positive_value")
                        .HasColumnType("float");

                    b.Property<string>("related")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("source")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("url")
                        .HasMaxLength(2083)
                        .HasColumnType("nvarchar(2083)");

                    b.HasKey("id");

                    b.ToTable("Historical_Stock_News_Sentiment_Score", "Gold");
                });

            modelBuilder.Entity("Mobile_Server_Dioxide.Entities.Macro_Historical_Silver", b =>
                {
                    b.Property<double?>("commercial_real_estate_prices_for_US_rate_value")
                        .HasColumnType("float");

                    b.Property<double?>("cpi_value")
                        .HasColumnType("float");

                    b.Property<DateTime>("date")
                        .HasColumnType("date");

                    b.Property<double?>("ferfed_funds_effective_rate_value")
                        .HasColumnType("float");

                    b.Property<double?>("gdp_value")
                        .HasColumnType("float");

                    b.Property<double?>("hires_total_non_farm_value")
                        .HasColumnType("float");

                    b.Property<double?>("interest_rate_value")
                        .HasColumnType("float");

                    b.Property<double?>("job_openning_non_farm_value")
                        .HasColumnType("float");

                    b.Property<double?>("labor_force_participant_rate_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoff_discharge_non_farm_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_accommodation_and_food_services_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_construction_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_fiance_and_insurance_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_manufacturing_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_professional_and_business_services_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_real_estate_and_rental_and_leasing_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_retail_trade_value")
                        .HasColumnType("float");

                    b.Property<double?>("layoffs_and_discharges_total_private_value")
                        .HasColumnType("float");

                    b.Property<double?>("quit_total_non_farm_value")
                        .HasColumnType("float");

                    b.Property<double?>("real_estate_loans_all_commercial_bank_value")
                        .HasColumnType("float");

                    b.Property<double?>("real_gdp_value")
                        .HasColumnType("float");

                    b.Property<double?>("unemployment_value")
                        .HasColumnType("float");

                    b.ToTable("Macro_Historical", "Silver");

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("Mobile_Server_Dioxide.Entities.User_DBO", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTimeOffset>("date_joined")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("is_active")
                        .HasColumnType("bit");

                    b.Property<bool>("is_staff")
                        .HasColumnType("bit");

                    b.Property<bool>("is_superuser")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("last_login")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("id");

                    b.ToTable("auth_user", "dbo");
                });
#pragma warning restore 612, 618
        }
    }
}
